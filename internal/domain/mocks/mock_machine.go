// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/popeskul/car-outliers-detection/internal/domain (interfaces: MachineInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMachineInterface is a mock of MachineInterface interface.
type MockMachineInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMachineInterfaceMockRecorder
}

// MockMachineInterfaceMockRecorder is the mock recorder for MockMachineInterface.
type MockMachineInterfaceMockRecorder struct {
	mock *MockMachineInterface
}

// NewMockMachineInterface creates a new mock instance.
func NewMockMachineInterface(ctrl *gomock.Controller) *MockMachineInterface {
	mock := &MockMachineInterface{ctrl: ctrl}
	mock.recorder = &MockMachineInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMachineInterface) EXPECT() *MockMachineInterfaceMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockMachineInterface) Validate() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(bool)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockMachineInterfaceMockRecorder) Validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockMachineInterface)(nil).Validate))
}
