// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/popeskul/car-outliers-detection/internal/services (interfaces: IOutlierService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/popeskul/car-outliers-detection/internal/domain"
)

// MockIOutlierService is a mock of IOutlierService interface.
type MockIOutlierService struct {
	ctrl     *gomock.Controller
	recorder *MockIOutlierServiceMockRecorder
}

// MockIOutlierServiceMockRecorder is the mock recorder for MockIOutlierService.
type MockIOutlierServiceMockRecorder struct {
	mock *MockIOutlierService
}

// NewMockIOutlierService creates a new mock instance.
func NewMockIOutlierService(ctrl *gomock.Controller) *MockIOutlierService {
	mock := &MockIOutlierService{ctrl: ctrl}
	mock.recorder = &MockIOutlierServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOutlierService) EXPECT() *MockIOutlierServiceMockRecorder {
	return m.recorder
}

// DetectOutliers mocks base method.
func (m *MockIOutlierService) DetectOutliers(arg0 []*domain.Machine) ([]*domain.Machine, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetectOutliers", arg0)
	ret0, _ := ret[0].([]*domain.Machine)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DetectOutliers indicates an expected call of DetectOutliers.
func (mr *MockIOutlierServiceMockRecorder) DetectOutliers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectOutliers", reflect.TypeOf((*MockIOutlierService)(nil).DetectOutliers), arg0)
}
