// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/popeskul/car-outliers-detection/internal/services (interfaces: IService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	services "github.com/popeskul/car-outliers-detection/internal/services"
)

// MockIService is a mock of IService interface.
type MockIService struct {
	ctrl     *gomock.Controller
	recorder *MockIServiceMockRecorder
}

// MockIServiceMockRecorder is the mock recorder for MockIService.
type MockIServiceMockRecorder struct {
	mock *MockIService
}

// NewMockIService creates a new mock instance.
func NewMockIService(ctrl *gomock.Controller) *MockIService {
	mock := &MockIService{ctrl: ctrl}
	mock.recorder = &MockIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIService) EXPECT() *MockIServiceMockRecorder {
	return m.recorder
}

// OutlierService mocks base method.
func (m *MockIService) OutlierService() services.IOutlierService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OutlierService")
	ret0, _ := ret[0].(services.IOutlierService)
	return ret0
}

// OutlierService indicates an expected call of OutlierService.
func (mr *MockIServiceMockRecorder) OutlierService() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OutlierService", reflect.TypeOf((*MockIService)(nil).OutlierService))
}
